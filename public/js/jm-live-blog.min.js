"use strict";jQuery(document).ready(function(o){var l=[];window.setInterval(function(){o.post({url:jmliveblog.url,data:{nonce:jmliveblog.nonce,action:"jm_live_blog_ajax",post_id:jmliveblog.post_id,update_ids:l},success:function(e){console.log(e),o(e.data).each(function(){var e=(e=this.id).replace(/\D/g,"");l.push(e)}),""!=e.data&&(o(".jm-live-blog-outer .jm-live-blog-section-outer #jm-live-blog-new-updates").css("display","flex"),o(".jm-live-blog-outer .jm-live-blog-section-outer #jm-live-blog-new-updates").on("click",function(){o(".jm-live-blog-outer .jm-live-blog-section-outer #jm-live-blog-new-updates").hide(),o(".jm-live-blog-outer .jm-live-blog-section").animate({scrollTop:0},"fast"),1<l.length?o(e.data).insertBefore(".jm-live-blog-outer .jm-live-blog-section .jm-live-blog-update:first").fadeIn("fast"):o(".jm-live-blog-section").html(e.data),e.data=""}))}})},3e4),o(".jm-live-blog-outer .jm-live-blog-section .jm-live-blog-update").each(function(){console.log(this);var e=(e=this.id).replace(/\D/g,"");console.log(e),l.push(e)})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImptLWxpdmUtYmxvZy5qcyJdLCJuYW1lcyI6WyJqUXVlcnkiLCJkb2N1bWVudCIsInJlYWR5IiwiJCIsIndpbmRvdyIsInNldEludGVydmFsIiwicG9zdCIsImRhdGEiLCJ1cmwiLCJub25jZSIsImptbGl2ZWJsb2ciLCJhY3Rpb24iLCJwb3N0X2lkIiwidXBkYXRlX2lkcyIsInVwZGF0ZUlkcyIsInN1Y2Nlc3MiLCJyZXNwb25zZSIsImNvbnNvbGUiLCJsb2ciLCJ1cGRhdGVJRCIsInB1c2giLCJyZXBsYWNlIiwiY3NzIiwiaGlkZSIsIm9uIiwiYW5pbWF0ZSIsInNjcm9sbFRvcCIsImxlbmd0aCIsImluc2VydEJlZm9yZSIsImZhZGVJbiIsImh0bWwiLCJlYWNoIl0sIm1hcHBpbmdzIjoiYUFBQUEsT0FBUUMsUUFBUSxFQUFHQyxNQUFNLFNBQVVDLEdBQW5DSCxJQUFBQSxFQUFtQkUsR0FJbEJFLE9BQU1DLFlBVU4sV0FDQ0YsRUFBRUcsS0FFREMsQ0FEQUMsSUFFQ0MsV0FBT0MsSUFEUkgsS0FFQ0ksQ0FEQUYsTUFFQUcsV0FBU0YsTUFEVEMsT0FFQUUsb0JBREFELFFBRUFGLFdBQUFFLFFBREFDLFdBRVFDLENBRFQsRUFDQUMsUUFFSUMsU0FBYUEsR0FEaEJDLFFBRUNDLElBQUlDLENBQVcsRUFEaEJoQixFQUFHYSxFQUVGRyxJQUFRLEVBQUdBLEtBQVEsV0FEbkIsSUFDQUEsR0FFRUEsRUFEUUMsS0FBTUQsSUFDZEUsUUFBQSxNQUFBLEVBQUEsRUFERlAsRUFFSUUsS0FBU1QsQ0FBUSxDQUR0QixDQUFDLEVBR0csSUFGQ1MsRUFFRFQsT0FESEosRUFBRywyRUFFQyxFQUFBbUIsSUFBOEVDLFVBQU0sTUFBQSxFQUR4RnBCLEVBQUcsMkVBRXdELEVBQUFxQixHQUFBLFFBQUEsV0FEMURyQixFQUFHLDJFQUNvRSxFQUFBb0IsS0FBQSxFQUF2RXBCLEVBQUcsMkNBQWlGLEVBQUFzQixRQUFBLENBQUFDLFVBQUEsQ0FBQSxFQUFBLE1BQUEsRUFDckVDLEVBQVZiLEVBQUFBLE9BQ0pYLEVBQUVhLEVBQUFBLElBQUFBLEVBQVFZLGFBQU9BLHNFQUFhLEVBQUFDLE9BQXdFQSxNQUFNLEVBRTVHMUIsRUFBRyx1QkFBQSxFQUFBMkIsS0FBMEJBLEVBQU1kLElBQVNULEVBRTdDUyxFQUFBQSxLQUFTVCxFQUNWLENBQUMsRUFHSCxDQUVGLENBQUEsQ0FDQSxFQTNDa0MsR0FBSyxFQUV2Q0osRUFDQ2MsZ0VBQW1CLEVBQUFjLEtBQUEsV0FBbkJkLFFBQ0lFLElBQUFBLElBQVcsRUFBZixJQUNBQSxHQUNRRCxFQURHQyxLQUFBQSxJQUNFQSxRQUFVLE1BQUEsRUFBQSxFQUF2QkYsUUFDQUgsSUFBVU0sQ0FBTUQsRUFDakJMLEVBQUdNLEtBQUFELENBQUEsQ0FBSCxDQUVBLENBaUNELENBQUMiLCJmaWxlIjoiam0tbGl2ZS1ibG9nLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImpRdWVyeSggZG9jdW1lbnQgKS5yZWFkeShmdW5jdGlvbiggJCApIHtcblxuXHRsZXQgdXBkYXRlSWRzID0gW107XG5cblx0d2luZG93LnNldEludGVydmFsKCBjaGVja1VwZGF0ZXMsIDMwMDAwICk7XG5cblx0JCggJy5qbS1saXZlLWJsb2ctb3V0ZXIgLmptLWxpdmUtYmxvZy1zZWN0aW9uIC5qbS1saXZlLWJsb2ctdXBkYXRlJyApLmVhY2goIGZ1bmN0aW9uICgpIHtcblx0XHRjb25zb2xlLmxvZyggdGhpcyApO1xuXHRcdGxldCB1cGRhdGVJRCA9IHRoaXMuaWQ7XG5cdFx0dXBkYXRlSUQgPSB1cGRhdGVJRC5yZXBsYWNlKCAvXFxEL2csJycgKTtcblx0XHRjb25zb2xlLmxvZyggdXBkYXRlSUQgKTtcblx0XHR1cGRhdGVJZHMucHVzaCggdXBkYXRlSUQgKTtcblx0fSApO1xuXG5cdGZ1bmN0aW9uIGNoZWNrVXBkYXRlcygpIHtcblx0XHQkLnBvc3Qoe1xuXHRcdFx0dXJsOiBqbWxpdmVibG9nLnVybCxcblx0XHRcdGRhdGE6IHtcblx0XHRcdFx0bm9uY2U6IGptbGl2ZWJsb2cubm9uY2UsXG5cdFx0XHRcdGFjdGlvbjogJ2ptX2xpdmVfYmxvZ19hamF4Jyxcblx0XHRcdFx0cG9zdF9pZDogam1saXZlYmxvZy5wb3N0X2lkLFxuXHRcdFx0XHR1cGRhdGVfaWRzOiB1cGRhdGVJZHMsXG5cdFx0XHR9LFxuXHRcdFx0c3VjY2VzczogZnVuY3Rpb24gKCByZXNwb25zZSApIHtcblx0XHRcdFx0Y29uc29sZS5sb2coIHJlc3BvbnNlICk7XG5cdFx0XHRcdCQoIHJlc3BvbnNlLmRhdGEgKS5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHR2YXIgdXBkYXRlSUQgPSB0aGlzLmlkO1xuXHRcdFx0XHRcdHVwZGF0ZUlEID0gdXBkYXRlSUQucmVwbGFjZSggL1xcRC9nLCcnICk7XG5cdFx0XHRcdFx0dXBkYXRlSWRzLnB1c2goIHVwZGF0ZUlEICk7XG5cdFx0XHRcdH0gKTtcblx0XHRcdFx0aWYgKCByZXNwb25zZS5kYXRhICE9ICcnICkge1xuXHRcdFx0XHRcdCQoICcuam0tbGl2ZS1ibG9nLW91dGVyIC5qbS1saXZlLWJsb2ctc2VjdGlvbi1vdXRlciAjam0tbGl2ZS1ibG9nLW5ldy11cGRhdGVzJyApLmNzcyggJ2Rpc3BsYXknLCAnZmxleCcgKTtcblx0XHRcdFx0XHQkKCAnLmptLWxpdmUtYmxvZy1vdXRlciAuam0tbGl2ZS1ibG9nLXNlY3Rpb24tb3V0ZXIgI2ptLWxpdmUtYmxvZy1uZXctdXBkYXRlcycgKS5vbiggJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHQkKCAnLmptLWxpdmUtYmxvZy1vdXRlciAuam0tbGl2ZS1ibG9nLXNlY3Rpb24tb3V0ZXIgI2ptLWxpdmUtYmxvZy1uZXctdXBkYXRlcycgKS5oaWRlKCk7XG5cdFx0XHRcdFx0XHQkKCBcIi5qbS1saXZlLWJsb2ctb3V0ZXIgLmptLWxpdmUtYmxvZy1zZWN0aW9uXCIgKS5hbmltYXRlKCB7IHNjcm9sbFRvcDogMCB9LCBcImZhc3RcIiApO1xuXHRcdFx0XHRcdFx0aWYgKCB1cGRhdGVJZHMubGVuZ3RoID4gMSApIHtcblx0XHRcdFx0XHRcdFx0JChyZXNwb25zZS5kYXRhKS5pbnNlcnRCZWZvcmUoJy5qbS1saXZlLWJsb2ctb3V0ZXIgLmptLWxpdmUtYmxvZy1zZWN0aW9uIC5qbS1saXZlLWJsb2ctdXBkYXRlOmZpcnN0JykuZmFkZUluKCdmYXN0Jyk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHQkKCAnLmptLWxpdmUtYmxvZy1zZWN0aW9uJyApLmh0bWwoIHJlc3BvbnNlLmRhdGEgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdHJlc3BvbnNlLmRhdGEgPSAnJztcblx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9KVxuXHR9XG59KTtcbiJdfQ==